<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<LangVersion>latest</LangVersion>
		<TargetFramework>net7.0</TargetFramework>
		<!--<Nullable>enable</Nullable>-->
		<IsPackable>false</IsPackable>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<ImplicitUsings>enable</ImplicitUsings>
		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
		<UserSecretsId>c42ee50c-d459-454b-a649-e3c6cc86ba66</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper" Version="12.0.1" />
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
		<PackageReference Include="DevExtreme.AspNet.Data" Version="2.9.2" />
		<PackageReference Include="JsonDiffPatch.Net" Version="2.3.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.5" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="7.0.5" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.32" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.5" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="RazorEngine.NetCore" Version="3.1.0" />
		<PackageReference Include="SendGrid" Version="9.28.1" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.7" />
	</ItemGroup>

	<ItemGroup>
		<Compile Remove="Controllers\GoogleDocsController.cs" />
	</ItemGroup>

	<ItemGroup>
		<None Remove="Docs\1.PNG" />
		<None Remove="EmailTemplates\forgot_password.html" />
		<None Remove="EmailTemplates\Notification.html" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\Application\Medico.Application\Medico.Application.csproj" />
		<ProjectReference Include="..\..\Infrastructure\CrossCutting\Medico.Identity\Medico.Identity.csproj" />
		<ProjectReference Include="..\..\Infrastructure\CrossCutting\Medico.IoC\Medico.IoC.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="ClientApp\dist\" />
		<Folder Include="wwwroot\patient-chart" />
	</ItemGroup>

	<ItemGroup>
		<_ContentIncludedByDefault Remove="wwwroot\imgs\logo.jpg" />
	</ItemGroup>

	<ItemGroup>
		<Content Include="Docs\1.PNG">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Include="EmailTemplates\forgot_password.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Include="EmailTemplates\Notification.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install --force" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr --configuration production" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>


</Project>